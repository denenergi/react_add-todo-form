{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","UserInfo","userId","user","usersFromServer","find","people","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","uuidv4","App","useState","todosFromServer","setTodos","input","setInput","selected","setSelected","isChooseTitile","setIsChooseTitile","isChooseUser","setIsChooseUser","action","method","onSubmit","event","preventDefault","chooseUser","isValideInput","replace","trim","length","addTodo","submitForm","type","value","onChange","target","titleSelect","userSelect","ReactDOM","render","document","getElementById"],"mappings":"sOAAe,GACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2B,OCpDEC,EAA2B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAInCC,EAFeC,EAEFC,MAAK,SAAAC,GAAM,OAAIA,EAAOT,KAAOK,KAEhD,OACE,mBAAGK,UAAU,WAAWC,KAAI,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAMH,MAApC,gBACGG,QADH,IACGA,OADH,EACGA,EAAML,QCPAW,EAA2B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvCb,EAIEa,EAJFb,GACAc,EAGED,EAHFC,MACAC,EAEEF,EAFFE,UACAV,EACEQ,EADFR,OAGF,OACE,0BACE,UAASL,EACTU,UAAWM,IAAW,WAAY,CAAE,sBAAuBD,IAF7D,UAIE,oBAAIL,UAAU,kBAAkB,UAASI,EAAzC,SACGA,IAEH,cAAC,EAAD,CAAUT,OAAQA,QCVXY,EAA2B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzC,OACE,yBAASR,UAAU,WAAnB,SACGQ,EAAMC,KAAI,SAAAN,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWO,qBClBpB,GACb,CACEpB,GAAI,EACJc,MAAO,qBACPC,WAAW,EACXV,OAAQ,GAEV,CACEL,GAAI,GACJc,MAAO,qBACPC,WAAW,EACXV,OAAQ,GAEV,CACEL,GAAI,EACJc,MAAO,qCACPC,WAAW,EACXV,OAAQ,ICVCgB,EAAM,WACjB,MAA0BC,mBAASC,GAAnC,mBAAOL,EAAP,KAAcM,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA4CN,oBAAS,GAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KACA,EAAwCR,oBAAS,GAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KA4CA,OACE,sBAAKtB,UAAU,MAAf,UACE,+CAEA,uBACEuB,OAAO,aACPC,OAAO,OACPC,SAAU,SAACC,IAjDjB,SAAoBA,GAClBA,EAAMC,iBAEN,IAAMC,EAAa/B,EAAgBC,MAAK,SAAAF,GAAI,OAAIA,EAAKL,OAAS0B,KACxDY,EAAgBd,EAAMe,QAAQ,MAAO,IAAIC,OAAOC,OAEhDC,EAAU,CACd3C,GAAIkB,EAAMwB,OAAS,EACnB5B,MAAOW,EACPV,WAAW,EACXV,OAASiC,EAAaA,EAAWtC,GAAK,GAItC8B,IADES,EAAgB,IAOlBP,GADEM,GAMAC,EAAgB,GAAwB,IAAnBI,EAAQtC,SAC/BmB,EAAS,GAAD,mBAAKN,GAAL,CAAYyB,KACpBjB,EAAS,IACTE,EAAY,KAsBRgB,CAAWR,IAJf,UAOE,sBAAK1B,UAAU,QAAf,UACE,uBACEmC,KAAK,OACL,UAAQ,aACRC,MAAOrB,EACPsB,SAAU,SAACX,GAAD,OA1BpB,SAAqBA,GACnBV,EAASU,EAAMY,OAAOF,OACtBhB,GAAkB,GAwBWmB,CAAYb,MAElCP,GACI,sBAAMnB,UAAU,QAAhB,qCAIP,sBAAKA,UAAU,QAAf,UACE,yBACE,UAAQ,aACRoC,MAAOnB,EACPoB,SAAU,SAACX,GAAD,OAhCpB,SAAoBA,GAClBR,EAAYQ,EAAMY,OAAOF,OACzBd,GAAgB,GA8BakB,CAAWd,IAHlC,UAKE,wBAAQU,MAAM,IAAd,0BAAuB1B,eACtB,YAAIb,GAAiBY,KAAI,SAAAb,GAAI,OAC5B,wBAAQwC,MAAOxC,EAAKL,KAApB,SAA0CK,EAAKL,MAAhBmB,qBAGlCW,GACI,sBAAMrB,UAAU,QAAhB,qCAGP,wBACEmC,KAAK,SACL,UAAQ,eACRE,SAAU,kBAAMvB,EAASN,IAH3B,oBAQF,cAAC,EAAD,CAAUA,MAAOA,QCnGvBiC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c7c735f7.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\nimport usersFromServer from '../../api/users';\n\ntype Props = {\n  userId: number;\n};\n\nexport const UserInfo:React.FC<Props> = ({ userId }) => {\n  // const { id, name, username, email }:User[] = usersFromServer;\n  const users:User[] = usersFromServer;\n\n  const user = users.find(people => people.id === userId);\n\n  return (\n    <a className=\"UserInfo\" href={user?.email}>\n      {user?.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo:Todo;\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\" data-cy={title}>\n        {title}\n      </h2>\n      <UserInfo userId={userId} />\n    </article>\n  );\n};\n","import { v4 as uuidv4 } from 'uuid';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ninterface Todo {\n  id: number,\n  title: string,\n  completed: boolean,\n  userId: number,\n}\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={uuidv4()} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n  const [input, setInput] = useState('');\n  const [selected, setSelected] = useState('');\n  const [isChooseTitile, setIsChooseTitile] = useState(false);\n  const [isChooseUser, setIsChooseUser] = useState(false);\n\n  function submitForm(event: React.SyntheticEvent) {\n    event.preventDefault();\n\n    const chooseUser = usersFromServer.find(user => user.name === selected);\n    const isValideInput = input.replace(/\\s/g, '').trim().length;\n\n    const addTodo = {\n      id: todos.length + 1,\n      title: input,\n      completed: false,\n      userId: (chooseUser ? chooseUser.id : 0),\n    };\n\n    if (isValideInput > 0) {\n      setIsChooseTitile(false);\n    } else {\n      setIsChooseTitile(true);\n    }\n\n    if (chooseUser) {\n      setIsChooseUser(false);\n    } else {\n      setIsChooseUser(true);\n    }\n\n    if (isValideInput > 0 && addTodo.userId !== 0) {\n      setTodos([...todos, addTodo]);\n      setInput('');\n      setSelected('');\n    }\n  }\n\n  function titleSelect(event: React.ChangeEvent<HTMLInputElement>) {\n    setInput(event.target.value);\n    setIsChooseTitile(false);\n  }\n\n  function userSelect(event: React.ChangeEvent<HTMLSelectElement>) {\n    setSelected(event.target.value);\n    setIsChooseUser(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          submitForm(event);\n        }}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={input}\n            onChange={(event) => titleSelect(event)}\n          />\n          {isChooseTitile\n            && <span className=\"error\">Please enter a title</span>}\n\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selected}\n            onChange={(event) => userSelect(event)}\n          >\n            <option value=\"0\" key={uuidv4()}>Choose a user</option>\n            {[...usersFromServer].map(user => (\n              <option value={user.name} key={uuidv4()}>{user.name}</option>\n            ))}\n          </select>\n          {isChooseUser\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onChange={() => setTodos(todos)}\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}